// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  websites  Website[]
}

model Website {
  id            String @id @default(cuid())
  name          String
  url           String @unique
  checkInterval Int // in minutes

  contactEmail String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  disabled  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ticks WebsiteTick[]
}

model Validator {
  id        String   @id @default(cuid())
  publicKey String
  location  String
  ip        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ticks WebsiteTick[]
}

model WebsiteTick {
  id          String            @id @default(cuid())
  websiteId   String
  validatorId String
  status      WebsiteTickStatus
  latency     Int // in milliseconds
  validator   Validator         @relation(fields: [validatorId], references: [id])
  website     Website           @relation(fields: [websiteId], references: [id])
  createdAt   DateTime          @default(now())
}

enum WebsiteTickStatus {
  UP
  DOWN
}
